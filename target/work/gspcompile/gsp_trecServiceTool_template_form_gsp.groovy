import trecservicetool.Template
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_trecServiceTool_template_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/template/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: templateInstance, field: 'fixpart', 'error'))
printHtmlPart(1)
invokeTag('message','g',6,['code':("template.fixpart.label"),'default':("Fixed part")],-1)
printHtmlPart(2)
invokeTag('textField','g',8,['class':("form-control"),'name':("fixpart"),'required':(""),'value':(templateInstance?.fixpart)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'fixpart', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'varpart', 'error'))
printHtmlPart(5)
invokeTag('message','g',14,['code':("template.varpart.label"),'default':("Variable part")],-1)
printHtmlPart(6)
invokeTag('textField','g',16,['class':("form-control"),'name':("varpart"),'value':(templateInstance?.varpart)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'varpart', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'codeRepetitions', 'error'))
printHtmlPart(7)
invokeTag('message','g',22,['code':("template.codeRepetitions.label"),'default':("Code Repetitions")],-1)
printHtmlPart(2)
invokeTag('textField','g',24,['class':("form-control"),'name':("codeRepetitions"),'required':(""),'value':(templateInstance?.codeRepetitions)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'codeRepetitions', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'numberOfCodes', 'error'))
printHtmlPart(8)
invokeTag('message','g',30,['code':("template.numberOfCodes.label"),'default':("Number Of Codes")],-1)
printHtmlPart(2)
invokeTag('textField','g',32,['class':("form-control"),'name':("numberOfCodes"),'required':(""),'value':(templateInstance?.numberOfCodes)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'numberOfCodes', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header1', 'error'))
printHtmlPart(9)
invokeTag('message','g',38,['code':("template.header1.label"),'default':("Header 1")],-1)
printHtmlPart(2)
invokeTag('textField','g',40,['class':("form-control"),'name':("header1"),'required':(""),'value':(templateInstance?.header1)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header1', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header2', 'error'))
printHtmlPart(10)
invokeTag('message','g',46,['code':("template.header2.label"),'default':("Header 2")],-1)
printHtmlPart(6)
invokeTag('textField','g',48,['class':("form-control"),'name':("header2"),'value':(templateInstance?.header2)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header2', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header3', 'error'))
printHtmlPart(11)
invokeTag('message','g',54,['code':("template.header3.label"),'default':("Header 3")],-1)
printHtmlPart(6)
invokeTag('textField','g',56,['class':("form-control"),'name':("header3"),'value':(templateInstance?.header3)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header3', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header4', 'error'))
printHtmlPart(12)
invokeTag('message','g',62,['code':("template.header4.label"),'default':("Header 4")],-1)
printHtmlPart(6)
invokeTag('textField','g',64,['class':("form-control"),'name':("header4"),'value':(templateInstance?.header4)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header4', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header5', 'error'))
printHtmlPart(13)
invokeTag('message','g',70,['code':("template.header5.label"),'default':("Header 5")],-1)
printHtmlPart(6)
invokeTag('textField','g',72,['class':("form-control"),'name':("header5"),'value':(templateInstance?.header5)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header5', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header6', 'error'))
printHtmlPart(14)
invokeTag('message','g',78,['code':("template.header6.label"),'default':("Header 6")],-1)
printHtmlPart(6)
invokeTag('textField','g',80,['class':("form-control"),'name':("header6"),'value':(templateInstance?.header6)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'header6', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content2', 'error'))
printHtmlPart(15)
invokeTag('message','g',86,['code':("template.content2.label"),'default':("Content 2")],-1)
printHtmlPart(6)
invokeTag('textField','g',88,['class':("form-control"),'name':("content2"),'value':(templateInstance?.content2)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content2', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content3', 'error'))
printHtmlPart(16)
invokeTag('message','g',94,['code':("template.content3.label"),'default':("Content 3")],-1)
printHtmlPart(6)
invokeTag('textField','g',96,['class':("form-control"),'name':("content3"),'value':(templateInstance?.content3)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content3', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content4', 'error'))
printHtmlPart(17)
invokeTag('message','g',102,['code':("template.content4.label"),'default':("Content 4")],-1)
printHtmlPart(6)
invokeTag('textField','g',104,['class':("form-control"),'name':("content4"),'value':(templateInstance?.content4)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content4', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content5', 'error'))
printHtmlPart(18)
invokeTag('message','g',110,['code':("template.content5.label"),'default':("Content 5")],-1)
printHtmlPart(6)
invokeTag('textField','g',112,['class':("form-control"),'name':("content5"),'value':(templateInstance?.content5)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content5', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content6', 'error'))
printHtmlPart(19)
invokeTag('message','g',118,['code':("template.content6.label"),'default':("Content 6")],-1)
printHtmlPart(6)
invokeTag('textField','g',120,['class':("form-control"),'name':("content6"),'value':(templateInstance?.content6)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'content6', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: templateInstance, field: 'labelType', 'error'))
printHtmlPart(20)
invokeTag('message','g',126,['code':("template.labelType.label"),'default':("Label Type")],-1)
printHtmlPart(6)
invokeTag('textField','g',128,['class':("form-control"),'name':("labelType"),'value':(templateInstance?.labelType)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: templateInstance, field: 'labelType', 'error'))
printHtmlPart(21)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1398695182000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
